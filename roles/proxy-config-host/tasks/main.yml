---

- name: install nginx
  apt: pkg=nginx state=present
  tags:
    - pch

- name: enable nginx
  service: name=nginx enabled=true
  tags:
    - pch

- name: disable default site 
  file: path=/etc/nginx/sites-enabled/default 
        state=absent
  notify:
    - restart nginx
  tags:
    - pch

- name: upload nginx site config file
  template: src=nginx.conf dest=/etc/nginx/sites-available/pch
  notify:
    - restart nginx
  tags:
    - pch

- name: enable site 
  file: path=/etc/nginx/sites-enabled/pch 
        src=/etc/nginx/sites-available/pch
        state=link
  notify:
    - restart nginx
  tags:
    - pch

- name: create pac root directory 
  file: path=/var/www/pch/ 
        state=directory
        owner=www-data group=www-data
  tags:
    - pch

- name: install gfwlist2pac
  pip: name=gfwlist2pac state=present

- name: download gfwlist
  get_url: url=https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt 
           dest=/tmp/gfwlist.txt

- name: generate pac file (gfwlist socks)
  shell: gfwlist2pac -i /tmp/gfwlist.txt -f /var/www/pch/proxy-{{ item.name }}-gfwlist.pac -p "SOCKS5 {{ item.host }}:{{ item.port }}; SOCKS {{ item.host }}:{{ item.port }};"
  with_items: pch_proxy_servers
  when: item.type == "socks5"

- name: generate pac file (gfwlist http)
  shell: gfwlist2pac -i /tmp/gfwlist.txt -f /var/www/pch/proxy-{{ item.name }}-gfwlist.pac -p "PROXY {{ item.host }}:{{ item.port }};"
  with_items: pch_proxy_servers
  when: item.type == "http"
 
- name: upload chnroute2pac 
  copy: src={{ item }} dest=/tmp/{{ item }} mode=755
  with_items:
    - chnroutes.py
    - chnroutes2pac.py

- name: dowload apnic data
  get_url: url=http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest
           dest=/tmp/apnic.dat
  
- name: generate pac file (chnroutes socks)
  shell: ./chnroutes2pac.py -i /tmp/apnic.dat -f /var/www/pch/proxy-{{ item.name }}-chnroutes.pac -p "SOCKS5 {{ item.host }}:{{ item.port }}; SOCKS {{ item.host }}:{{ item.port }};"
         chdir=/tmp/
  with_items: pch_proxy_servers
  when: item.type == "socks5"

- name: generate pac file (chnroutes2 http)
  shell: ./chnroutes2pac.py -i /tmp/apnic.dat -f /var/www/pch/proxy-{{ item.name }}-chnroutes.pac -p "PROXY {{ item.host }}:{{ item.port }};"
         chdir=/tmp/
  with_items: pch_proxy_servers
  when: item.type == "http"
 
- name: change owner to www-data 
  file: path=/var/www/pch/ owner=www-data group=www-data

#- name: upload pac files
#  template: src=proxy.pac 
#            dest=/var/www/pch/proxy.pac
#            owner=www-data group=www-data
#  tags:
#    - pch
