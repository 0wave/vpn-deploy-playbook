---
#install & config ikev2 server

- name: Enforce strongswan is installed for Ubuntu
  apt: pkg={{ item }} state=installed
  with_items:
    - strongswan
    - strongswan-plugin-xauth-generic
    - strongswan-plugin-xauth-eap
    - strongswan-plugin-eap-md5
    - strongswan-plugin-eap-mschapv2
    - strongswan-plugin-eap-radius
  notify: restart ipsec
  when: ansible_os_family == "Ubuntu"
  tags:
    - ipsec

- name: Add backports repository for Deiban
  apt_repository: repo='deb http://ftp.debian.org/debian {{ansible_distribution_release}}-backports main contrib non-free' state=present update_cache=yes
  when: ansible_os_family == "Debian"

- name: Enforce strongswan is installed for Debian
  apt: pkg={{ item }} state=installed default_release={{ansible_distribution_release}}-backports update_cache=yes
  with_items:
    - strongswan
    - libstrongswan
    - libstrongswan-extra-plugins
    - libstrongswan-standard-plugins
    - libcharon-extra-plugins
    - strongswan-charon
    - strongswan-ike
    - strongswan-libcharon
    - strongswan-ikev1
    - strongswan-ikev2
    - strongswan-starter
  notify: restart ipsec
  when: ansible_os_family == "Debian"
  tags:
    - ipsec

- name:  Upload ipsec config files
  template: src={{ item }}
            dest=/etc/{{ item }}
            owner=root group=root mode=0644
  with_items:
    - ipsec.conf
    - strongswan.conf
  notify: restart ipsec
  tags:
    - ipsec

- name: ensure ipsec.secrets contains psk info
  lineinfile: 'line=": PSK \"{{ ipsec_psk }}\""
              regexp=": PSK \"{{ ipsec_psk }}\""
              dest=/etc/ipsec.secrets'
  tags:
    - ipsec

- name: add ikev1 users
  lineinfile: 'line="{{ item.username }} : XAUTH \"{{ item.password }}\""
              regexp="{{ item.username }} : XAUTH \"{{ item.password }}\""
              insertafter=": PSK"
              dest=/etc/ipsec.secrets'
  with_items: ikev1_users
  when: ipsec_enable_ikev1
  tags:
    - ipsec

- name: ensure ipsec.secrets contains correct info
  lineinfile: 'dest=/etc/ipsec.secrets
              line=": RSA /etc/ipsec.d/private/ipsec.key"
              regexp=": RSA /etc/ipsec.d/private/ipsec.key"'
  when: ipsec_enable_ikev2
  tags:
    - ipsec

- name: add ikev2 users
  lineinfile: 'line="{{ item.username }} : EAP \"{{ item.password }}\""
              regexp="{{ item.username }} : EAP \"{{ item.password }}\""
              insertafter=": RSA"
              dest=/etc/ipsec.secrets'
  with_items: ikev2_users
  when: ipsec_enable_ikev2
  tags:
    - ipsec

- name: Upload ipsec certs
  copy: src={{ ipsec_cert }}
        dest=/etc/ipsec.d/certs/ipsec.pem
        owner=root group=root
  when: ipsec_enable_ikev2
  notify: restart ipsec
  tags:
    - ipsec

- name: Upload ipsec private key
  copy: src={{ ipsec_key }}
        dest=/etc/ipsec.d/private/ipsec.key
        owner=root group=root
  when: ipsec_enable_ikev2
  notify: restart ipsec
  tags:
    - ipsec

- name: make sure /opt/easynat exists
  action: file path=/opt/easynat/ state=directory
  tags:
    - ipsec
    - nat

- name: set network in easynat rule file
  action: lineinfile dest=/opt/easynat/rules.cnf
                     regexp="{{ ipsec_subnet }}"
                     line="{{ ipsec_subnet }}"
                     state=present
                     create=yes
  notify:
    - setup nat rules
  tags:
    - ipsec
    - nat
